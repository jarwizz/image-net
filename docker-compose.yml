services:
  db:
    image: postgres:16
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  api:
    build: ./api
    env_file: .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${API_PORT}:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10

  # Run this only when you want to (doesn't start with default `up`)
  ingest:
    build: ./ingest
    env_file: .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      db:
        condition: service_healthy
    command: ["npm", "run", "ingest"]
    profiles: ["ingest"]

  web:
    build: ./web
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "${WEB_PORT}:80"
    restart: unless-stopped

volumes:
  dbdata:
